version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:5001/api
    depends_on:
      backend:
        condition: service_started

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5001:5000"
    volumes:
      - ./backend:/app
      # To use GCP authentication, uncomment and modify:
      - ~/.secrets/gcp/generative-fashion-355408-33bf54a8a28f.json:/app/gcp-key.json:ro
    environment:
      - FLASK_APP=wsgi.py
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/webapp
      # GCS configuration
      - GCS_BUCKET_NAME=cursor-test-llm-assets
      # Uncomment if using service account key:
      - GOOGLE_APPLICATION_CREDENTIALS=/app/gcp-key.json
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c '
        echo "Database is healthy. Applying database migrations..." &&
        flask db upgrade &&
        echo "Starting Gunicorn..." &&
        gunicorn -k eventlet --bind 0.0.0.0:5000 wsgi:app
      '

  db:
    image: postgres:15
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=webapp
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d webapp || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  postgres_data: 